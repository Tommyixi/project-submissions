continue
myo_participant.trac_visits
myo_participant
continue
myo_participant.trac_visits
myo_participant
continue
@data
continue
@data
continue
@data
continue
meta.select {|m| m["field_note"].size>0 }.count
meta.select {|m| m["field_note"].size>0 }
meta.select {|m| m["field_note"].size>0 }.field_note
meta.select {|m| m["field_note"].size>0 }
meta.select {|m| m["field_note"].size>0 }["field_note"]
meta.select {|m| m["field_note"].size>0 }.field_note
meta.select {|m| m["field_note"].size>0 }.size
meta.select {|m| m["field_note"].size>0 }.count
meta.select {|m| m["field_note"].size>0 }
meta.select {|m| m["custom_alignment"]=="" }
meta.select {|m| m["custom_alignment"].nil? }
meta.select {|m| m["custom_alignment"]?nil }
meta.select {|m| m["custom_alignment"]==nil }
meta.select {|m| m["custom_alignment"]!=nil }
meta.select {|m| m["family_with_ms"]!=nil }
meta.select {|m| m["b3"]!=nil }
meta.select {|m| m["b3"].nil? }
meta.select {|m| m["b3"] == 0}
continue
meta
meta.each { |m| puts "\r\n"}
meta.each { |m| puts m["field_name"] }
meta.each do  i=i+1 i end
meta.each  i=i+1 i end
meta.each  i++ end
meta.each do i++ end
i=0
meta.count
meta.size
meta[0]["field_name"]
meta[0]
meta
continue
y meta
meta.to_yaml
meta.each do |a| a.has_key?("asdf")  end
meta.each 
meta.each do   end
meta.each do |a|   end
meta.each do 
meta.each do |a| a.has_key?("asdf")  end
 JSON.parse(redcap_metadata).each do |a| a.has_key?("asdf")  end
 JSON.parse(redcap_metadata).each do |a| a["asdf"]  end
 JSON.parse(redcap_metadata).each do |a| a[asdfasd]  end
 JSON.parse(redcap_metadata).each do |a| a["field_name"]  end
 JSON.parse(redcap_metadata).each do |a| a.field_name end
a["field_name"]
a
a = JSON.parse(redcap_metadata)[0]
JSON.parse(redcap_metadata)[0]["field_name"]
JSON.parse(redcap_metadata)[0]
JSON.parse(redcap_metadata).class
JSON.parse(redcap_metadata)
JSON.parse(redcap_metadata).class
JSON.parse(redcap_metadata)
redcap_metadata.class
redcap_metadata
JSON.parse(meta)
JSON.parse(m)
m
m[:field_name]
m(:field_name)
m.class
m.key?(:field_name).class
m.key?(:field_name)
m[1].class
m["field_name"].
m["field_name"]
m[0]
m[1]
m.0
m.1
m.class
m
m.key?(:field_name)
m
m:field_name
m{:field_name}
m.class
m[:field_name]
m[:field_name]]
m["field_name"]
m
m=meta[162]
:m = meta[162]
:m
m =:m meta[162]
m = meta[162]
m <- meta[162]
meta
m
n
m[0]
m[:field_name]
m.field_name
m=>field_name
m->field_name
m.class
m
m=meta[
meta[162]["field_name"]
meta[162]
meta[163]
meta.class
meta.size
meta.size do |f| f["field_name"]  end
meta.each do |f| f end
meta[1]["field_name"]
meta[1]
JSON.parse(meta[1])
meta[1].to_yaml
meta[1]
meta.to_yaml
y meta
p meta
puts meta
meta[0][:field_name]
meta[0]{:field_name}
meta[0]["field_name"]
meta[0]=>"matrix_ranking"
meta[0]
meta
meta.first
JSON.parse(meta)
JSON.parse(meta).first
JSON.parse(meta)
meta.key?("question_number")
meta.class
meta.key?("question_number")
meta.each do |m| m["field_name"] end
meta.each  do |m| m["field_name"] end
each meta do |m| m["field_name"] end
meta[2]["field_name"]
meta[1]["field_name"]
meta[1].first
meta[1].second
meta[1].first
meta[1][0]
meta[1][1]
meta[1]
meta[0]
meta
meta.each do |e| e.to_yaml  end
meta.each do |e| e.each do |i|  puts i  end  end
meta.each do |e| e.each do |i|  puts i+"\n" end  end
meta.each do |e| e['field_name']  end
meta.each do |e| e['field_name']+"_"  end
meta.each do |e| e['field_name']+"\r\n" end
puts "\r\n"
puts _
meta.each do |e| e['field_name'].to_yaml  end
meta.each do |e| e['field_name']+"<br>"  end
meta.each do |e| e['field_name']+"\n"  end
meta.each do |e| e['field_name']  end
meta.each do |e| e.each do |i|  puts i  end  end
meta.each do |e| e.each do |i|  puts i+"\n" end  end
meta.each do |e| e.each do |i|  puts i\n end  end
meta.each do |e| e.each do |i|  puts "<br>"+i end  end
meta.each do |e| e.each do |i|  puts i end  end
JSON.parse(meta).each do |e| e.each do |i|  puts i end  end
JSON.parse(meta).each do |i| puts i.to_string end
meta.class
type(meta)
JSON.parse(meta).each do |i| puts i['field_name'] end
JSON.parse(meta).each do |i| puts i[1] end
JSON.parse(meta).each do |i| puts i.first end
JSON.parse(meta).each do |i| i end
JSON.parse(meta).each do |i|
puts JSON.pretty_generate(meta)
puts JSON.pretty_generat(meta)
require 'json'
y meta
meta.to_yaml
meta
continue
meta
continue
meta
exit
continue
meta.to_yaml
meta
exit
continue
